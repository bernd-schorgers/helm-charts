name: "Pull Request: Get metadata"

on:
  workflow_call:
    outputs:
      isRenovatePR:
        description: "Is the PR coming from Renovate?"
        value: ${{ jobs.pr-metadata.outputs.isRenovatePR }}
      isFork:
        description: "Is the PR coming from a forked repo?"
        value: ${{ jobs.pr-metadata.outputs.isFork }}
      addedOrModifiedFilesDetected:
        description: "Does the PR contain any changes?"
        value: ${{ jobs.pr-changes.outputs.addedOrModifiedFilesDetected }}
      addedOrModifiedFiles:
        description: "A list of the files changed in this PR"
        value: ${{ jobs.pr-changes.outputs.addedOrModifiedFiles }}
      addedOrModifiedCharts:
        description: "A list of the charts changed in this PR"
        value: ${{ jobs.pr-changes.outputs.addedOrModifiedCharts }}
      chartsToLint:
        value: ${{ jobs.pr-changes.outputs.chartsToLint }}
      chartsToInstall:
        value: ${{ jobs.pr-changes.outputs.chartsToInstall }}

jobs:
  pr-metadata:
    name: Collect PR metadata
    runs-on: ubuntu-22.04
    outputs:
      isRenovatePR: ${{ startsWith(steps.branch-name.outputs.current_branch, 'renovate/') }}
      isFork: ${{ github.event.pull_request.head.repo.full_name != github.repository }}
    steps:
      - name: Get branch name
        id: branch-name
        uses: tj-actions/branch-names@v5.4

      - name: Save PR data to file
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          echo $PR_NUMBER > pr_number.txt

      - name: Store pr data in artifact
        uses: actions/upload-artifact@v3
        with:
          name: pr_metadata
          path: ./pr_number.txt
          retention-days: 5

  pr-changes:
    name: Collect PR changes
    runs-on: ubuntu-22.04
    outputs:
      addedOrModifiedFilesDetected: ${{ steps.changed-files.outputs.allAddedOrModified }}
      addedOrModifiedFiles: ${{ steps.changed-files.outputs.allAddedOrModified_files }}
      addedOrModifiedCharts: ${{ steps.changed-charts.outputs.changedCharts }}
      chartsToLint: ${{ steps.changed-charts.outputs.chartsToLint }}
      chartsToInstall: ${{ steps.changed-charts.outputs.chartsToInstall }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Collect changed files
        uses: dorny/paths-filter@v2
        id: changed-files
        with:
          list-files: json
          filters: |
            allAddedOrModified:
              - added|modified: '**'

      - name: Collect changed charts
        uses: ./.github/actions/collect-changed-charts
        id: changed-charts

      # - name: Collect changed charts
      #   id: changed-charts
      #   shell: bash
      #   run: |
      #     CHARTS=()
      #     PATHS=(${{ steps.filter.outputs.chartsAddedOrModified_files }})

      #     # Get only the chart paths
      #     for CHARTPATH in "${PATHS[@]}"
      #     do
      #       IFS='/' read -r -a path_parts <<< "${CHARTPATH}"
      #       CHARTS+=("${path_parts[1]}/${path_parts[2]}")
      #     done

      #     # Remove duplicates
      #     CHARTS=( `printf "%s\n" "${CHARTS[@]}" | sort -u` )

      #     # Set output to changed charts
      #     printf "::set-output name=addedOrModifiedCharts::%s\n" "${CHARTS[*]}"
